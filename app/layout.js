// app/layout.js
import localFont from "next/font/local";
import '@/styles/globals.css';
import ClientWrapper from '@/components/ClientWrapper';
import Footer from '@/components/Footer';
import { cookies } from 'next/headers'; // Import cookies from next/headers
import jwt from 'jsonwebtoken';
import { AuthProvider } from '@/context/AuthContext';

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  // Server-side: based on HTTP request cookie only
  const cookieStore = cookies();
  const tokenCookie = cookieStore.get('token'); // Get the token cookie

  let decoded = null; // Initialize decoded to null

  // Check if the token exists before verifying it
  if (tokenCookie) {
    try {
      // Verify the token and decode it
      decoded = jwt.verify(tokenCookie.value, process.env.JWT_SECRET);
    } catch (err) {
      console.error("Token verification failed:", err);
      // If verification fails, decoded will remain null
    }
  }

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <AuthProvider>
          <ClientWrapper initial={{ decoded }}>{children}</ClientWrapper> {/* Pass the token as initial data */}
        </AuthProvider>
        <Footer />
      </body>
    </html>
  );
}
